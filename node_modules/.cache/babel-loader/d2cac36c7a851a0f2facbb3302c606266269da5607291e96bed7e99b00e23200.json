{"ast":null,"code":"var _jsxFileName = \"D:\\\\Myprojects\\\\Reactjs Projects\\\\MovieDb\\\\moviedb\\\\src\\\\Mycomponents\\\\Body.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Pagination from 'react-bootstrap/Pagination';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Body = props => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  useEffect(() => {\n    console.log(props);\n    const apiKey = 'c45a857c193f6302f2b5061c3b85e743';\n    const apiUrl = 'https://api.themoviedb.org/3/movie/popular';\n    axios.get(apiUrl, {\n      params: {\n        api_key: apiKey,\n        language: 'en-US',\n        page: currentPage\n      }\n    }).then(response => {\n      console.log(response.data);\n      setMovies(response.data.results);\n      setTotalPages(response.data.total_pages);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }, [currentPage]);\n  const handlePageChange = page => {\n    if (page >= 1 && page <= totalPages) {\n      setCurrentPage(page);\n    }\n  };\n  const renderPaginationItems = () => {\n    const items = [];\n    const displayPages = 5;\n    let startPage = Math.max(1, currentPage - Math.floor(displayPages / 2));\n    let endPage = startPage + displayPages - 1;\n    if (endPage > totalPages) {\n      endPage = totalPages;\n      startPage = Math.max(1, endPage - displayPages + 1);\n    }\n    if (startPage > 1) {\n      items.push( /*#__PURE__*/_jsxDEV(Pagination.First, {\n        onClick: () => handlePageChange(1)\n      }, \"first\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Pagination.Ellipsis, {\n        disabled: true\n      }, \"ellipsis-start\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this));\n    }\n    for (let i = startPage; i <= endPage; i++) {\n      items.push( /*#__PURE__*/_jsxDEV(Pagination.Item, {\n        active: i === currentPage,\n        onClick: () => handlePageChange(i),\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this));\n    }\n    if (endPage < totalPages) {\n      items.push( /*#__PURE__*/_jsxDEV(Pagination.Ellipsis, {\n        disabled: true\n      }, \"ellipsis-end\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Pagination.Last, {\n        onClick: () => handlePageChange(totalPages)\n      }, \"last\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this));\n    }\n    return items;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: '#282b33'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        paddingLeft: '20px',\n        justifyContent: 'center'\n      },\n      children: [movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '50%',\n          maxWidth: '300px',\n          margin: '10px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/movie-detail/${movie.id}`,\n          style: {\n            textDecoration: \"none\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://image.tmdb.org/t/p/w500/${movie.poster_path}`,\n            alt: movie.title,\n            style: {\n              width: '100%',\n              height: 'auto'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: 'white'\n            },\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: 'white'\n            },\n            children: [\"Rating: \", movie.vote_average]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Pagination, {\n        children: [/*#__PURE__*/_jsxDEV(Pagination.Prev, {\n          onClick: () => handlePageChange(currentPage - 1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), renderPaginationItems(), /*#__PURE__*/_jsxDEV(Pagination.Next, {\n          onClick: () => handlePageChange(currentPage + 1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(Body, \"5KtHYLANBaZuUJ72LpeC5jJl2EA=\");\n_c = Body;\nexport default Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["React","useEffect","useState","axios","Pagination","BrowserRouter","Router","Route","Switch","Link","jsxDEV","_jsxDEV","Body","props","_s","movies","setMovies","currentPage","setCurrentPage","totalPages","setTotalPages","console","log","apiKey","apiUrl","get","params","api_key","language","page","then","response","data","results","total_pages","catch","error","handlePageChange","renderPaginationItems","items","displayPages","startPage","Math","max","floor","endPage","push","First","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Ellipsis","disabled","i","Item","active","children","Last","style","background","display","flexWrap","paddingLeft","justifyContent","map","movie","width","maxWidth","margin","to","id","textDecoration","src","poster_path","alt","title","height","color","vote_average","Prev","Next","_c","$RefreshReg$"],"sources":["D:/Myprojects/Reactjs Projects/MovieDb/moviedb/src/Mycomponents/Body.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport Pagination from 'react-bootstrap/Pagination'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom'\r\n\r\n\r\nconst Body = (props) => {\r\n  const [movies, setMovies] = useState([])\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [totalPages, setTotalPages] = useState(1)\r\n\r\n  useEffect(() => {\r\n    console.log(props)\r\n    const apiKey = 'c45a857c193f6302f2b5061c3b85e743'\r\n    const apiUrl = 'https://api.themoviedb.org/3/movie/popular'\r\n\r\n    axios\r\n      .get(apiUrl, {\r\n        params: {\r\n          api_key: apiKey,\r\n          language: 'en-US',\r\n          page: currentPage,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data)\r\n        setMovies(response.data.results)\r\n        setTotalPages(response.data.total_pages)\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching data:', error)\r\n      })\r\n  }, [currentPage])\r\n\r\n  const handlePageChange = (page) => {\r\n    if (page >= 1 && page <= totalPages) {\r\n      setCurrentPage(page)\r\n    }\r\n  }\r\n\r\n  const renderPaginationItems = () => {\r\n    const items = []\r\n    const displayPages = 5\r\n\r\n    let startPage = Math.max(1, currentPage - Math.floor(displayPages / 2))\r\n    let endPage = startPage + displayPages - 1\r\n\r\n    if (endPage > totalPages) {\r\n      endPage = totalPages\r\n      startPage = Math.max(1, endPage - displayPages + 1)\r\n    }\r\n\r\n    if (startPage > 1) {\r\n      items.push(\r\n        <Pagination.First key=\"first\" onClick={() => handlePageChange(1)} />,\r\n        <Pagination.Ellipsis key=\"ellipsis-start\" disabled />,\r\n      )\r\n    }\r\n\r\n    for (let i = startPage; i <= endPage; i++) {\r\n      items.push(\r\n        <Pagination.Item\r\n          key={i}\r\n          active={i === currentPage}\r\n          onClick={() => handlePageChange(i)}\r\n        >\r\n          {i}\r\n        </Pagination.Item>,\r\n      )\r\n    }\r\n\r\n    if (endPage < totalPages) {\r\n      items.push(\r\n        <Pagination.Ellipsis key=\"ellipsis-end\" disabled />,\r\n        <Pagination.Last\r\n          key=\"last\"\r\n          onClick={() => handlePageChange(totalPages)}\r\n        />,\r\n      )\r\n    }\r\n\r\n    return items\r\n  }\r\n\r\n  return (\r\n    <div style={{ background: '#282b33' }}>\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          flexWrap: 'wrap',\r\n          paddingLeft: '20px',\r\n          justifyContent: 'center',\r\n        }}\r\n      >\r\n        {movies.map((movie) => (\r\n          <div\r\n            key={movie.id}\r\n            style={{\r\n              width: '50%',\r\n              maxWidth: '300px',\r\n              margin: '10px',\r\n          \r\n            }}\r\n          >\r\n            <Link to={`/movie-detail/${movie.id}`} style={{textDecoration:\"none\"}}>\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\r\n                alt={movie.title}\r\n                style={{ width: '100%', height: 'auto' }}\r\n              />\r\n              <p style={{ color: 'white' }}>{movie.title}</p>\r\n              <p style={{ color: 'white' }}>Rating: {movie.vote_average}</p>\r\n            </Link>\r\n          </div>\r\n        ))}\r\n        <Pagination>\r\n          <Pagination.Prev onClick={() => handlePageChange(currentPage - 1)} />\r\n          {renderPaginationItems()}\r\n          <Pagination.Next onClick={() => handlePageChange(currentPage + 1)} />\r\n        </Pagination>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Body\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}