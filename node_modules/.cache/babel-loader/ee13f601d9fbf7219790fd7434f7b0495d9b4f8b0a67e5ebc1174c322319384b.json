{"ast":null,"code":"var _jsxFileName = \"D:\\\\Myprojects\\\\Reactjs Projects\\\\MovieDb\\\\moviedb\\\\src\\\\Mycomponents\\\\Body.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Pagination from 'react-bootstrap/Pagination';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Body = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  useEffect(() => {\n    const apiKey = 'c45a857c193f6302f2b5061c3b85e743';\n    const apiUrl = 'https://api.themoviedb.org/3/movie/popular';\n    axios.get(apiUrl, {\n      params: {\n        api_key: apiKey,\n        language: 'en-US',\n        page: currentPage\n      }\n    }).then(response => {\n      console.log(response.data);\n      setMovies(response.data.results);\n      setTotalPages(response.data.total_pages);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }, [currentPage]);\n  const handlePageChange = page => {\n    if (page >= 1 && page <= totalPages) {\n      setCurrentPage(page);\n    }\n  };\n  const renderPaginationItems = () => {\n    const items = [];\n    const displayPages = 5;\n    let startPage = Math.max(1, currentPage - Math.floor(displayPages / 2));\n    let endPage = startPage + displayPages - 1;\n    if (endPage > totalPages) {\n      endPage = totalPages;\n      startPage = Math.max(1, endPage - displayPages + 1);\n    }\n    for (let i = startPage; i <= endPage; i++) {\n      items.push( /*#__PURE__*/_jsxDEV(Pagination.Item, {\n        active: i === currentPage,\n        onClick: () => handlePageChange(i),\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this));\n    }\n    return items;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: '#282b33'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Popular Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        paddingLeft: '20px',\n        justifyContent: 'center'\n      },\n      children: [movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '50%',\n          maxWidth: '300px',\n          margin: '10px',\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://image.tmdb.org/t/p/w500/${movie.poster_path}`,\n          alt: movie.title,\n          style: {\n            width: '100%',\n            height: 'auto'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'white'\n          },\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Pagination, {\n        children: [/*#__PURE__*/_jsxDEV(Pagination.Prev, {\n          onClick: () => handlePageChange(currentPage - 1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), renderPaginationItems(), /*#__PURE__*/_jsxDEV(Pagination.Next, {\n          onClick: () => handlePageChange(currentPage + 1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(Body, \"5KtHYLANBaZuUJ72LpeC5jJl2EA=\");\n_c = Body;\nexport default Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["React","useEffect","useState","axios","Pagination","jsxDEV","_jsxDEV","Body","_s","movies","setMovies","currentPage","setCurrentPage","totalPages","setTotalPages","apiKey","apiUrl","get","params","api_key","language","page","then","response","console","log","data","results","total_pages","catch","error","handlePageChange","renderPaginationItems","items","displayPages","startPage","Math","max","floor","endPage","i","push","Item","active","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","style","background","display","flexWrap","paddingLeft","justifyContent","map","movie","width","maxWidth","margin","textAlign","src","poster_path","alt","title","height","color","id","Prev","Next","_c","$RefreshReg$"],"sources":["D:/Myprojects/Reactjs Projects/MovieDb/moviedb/src/Mycomponents/Body.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport Pagination from 'react-bootstrap/Pagination'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nconst Body = () => {\r\n  const [movies, setMovies] = useState([])\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [totalPages, setTotalPages] = useState(1)\r\n\r\n  useEffect(() => {\r\n    const apiKey = 'c45a857c193f6302f2b5061c3b85e743'\r\n    const apiUrl = 'https://api.themoviedb.org/3/movie/popular'\r\n\r\n    axios\r\n      .get(apiUrl, {\r\n        params: {\r\n          api_key: apiKey,\r\n          language: 'en-US',\r\n          page: currentPage,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data)\r\n        setMovies(response.data.results)\r\n        setTotalPages(response.data.total_pages)\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching data:', error)\r\n      })\r\n  }, [currentPage])\r\n\r\n  const handlePageChange = (page) => {\r\n    if (page >= 1 && page <= totalPages) {\r\n      setCurrentPage(page)\r\n    }\r\n  }\r\n\r\n  const renderPaginationItems = () => {\r\n    const items = []\r\n    const displayPages = 5\r\n\r\n    let startPage = Math.max(1, currentPage - Math.floor(displayPages / 2))\r\n    let endPage = startPage + displayPages - 1\r\n\r\n    if (endPage > totalPages) {\r\n      endPage = totalPages\r\n      startPage = Math.max(1, endPage - displayPages + 1)\r\n    }\r\n\r\n    for (let i = startPage; i <= endPage; i++) {\r\n      items.push(\r\n        <Pagination.Item\r\n          key={i}\r\n          active={i === currentPage}\r\n          onClick={() => handlePageChange(i)}\r\n        >\r\n          {i}\r\n        </Pagination.Item>,\r\n      )\r\n    }\r\n\r\n    return items\r\n  }\r\n\r\n  return (\r\n    <div style={{ background: '#282b33' }}>\r\n      <h2>Popular Movies</h2>\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          flexWrap: 'wrap',\r\n          paddingLeft: '20px',\r\n          justifyContent: 'center',\r\n        }}\r\n      >\r\n        {movies.map((movie) => (\r\n          <div\r\n            key={movie.id}\r\n            style={{\r\n              width: '50%',\r\n              maxWidth: '300px',\r\n              margin: '10px',\r\n              textAlign: 'center',\r\n            }}\r\n          >\r\n            <img\r\n              src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\r\n              alt={movie.title}\r\n              style={{ width: '100%', height: 'auto' }}\r\n            />\r\n            <p style={{ color: 'white' }}>{movie.title}</p>\r\n          </div>\r\n        ))}\r\n        <Pagination>\r\n          <Pagination.Prev onClick={() => handlePageChange(currentPage - 1)} />\r\n          {renderPaginationItems()}\r\n          <Pagination.Next onClick={() => handlePageChange(currentPage + 1)} />\r\n        </Pagination>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Body\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}